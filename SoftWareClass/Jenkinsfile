pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
              	sh 'javac -encoding UTF-8 -d classes -cp /Users/gang-yunho/eclipse/plugins/junit-platform-console-standalone-1.7.1.jar SoftWareClass/src/*.java'
            }
        }
        stage('Test') {
            steps {
                script {
    				def classpath = "classes:/Users/gang-yunho/eclipse/plugins/junit-platform-console-standalone-1.7.1.jar"
    				sh "java -Dfile.encoding=UTF-8 -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt"
				}
            }
        }
        stage('Run PerformanceTest') {
            steps {
                script {
                    def classpath = "classes"
                    sh "java -Dfile.encoding=UTF-8 -cp ${classpath} PerformanceTest > performance_results.txt"
                }
            }
        }
    }
    
    post {
        always {
            archiveArtifacts 'test_results.txt'
            archiveArtifacts 'performance_results.txt'
        }
        failure {
            echo 'Build or test failed'
        }
        success {
        script {
                emailext (
                    to: 'ajtwoddl1236@naver.com',
                    subject: "Successful Pipeline: softwareClass",
                    body: "Good news! build succeeded.",
                    attachmentsPattern: 'test_results.txt, performance_results.txt'
                )
            }
            echo 'Build and test succeeded'
        }
    }
}
